{
  "NuDeltaCredentials": {
    "Username": "",
    "Password": ""
  },
  "PreferredAPI": "OpenAI",
  "GoogleSheets": {
    "ServiceAccountFile": "",
    "SpreadsheetId": "",
    "SheetName": "",
    "ApplicationName": "",
    "Mappings": {
      "InvoiceNumber": "",
      "ReferenceNumber": "",
      "IssueDate": "",
      "SaleDate": "",
      "PaymentMethod": "",
      "Maturity": "",
      "Currency": "",
      "TotalAmount": "",
      "PaidAmount": "",
      "AmountLeftToPay": "",
      "IBAN": "",
      "SellerNIP": "",
      "SellerName": "",
      "SellerCity": "",
      "SellerStreet": "",
      "SellerZIP": "",
      "BuyerNIP": "",
      "BuyerName": "",
      "BuyerCity": "",
      "BuyerStreet": "",
      "BuyerZIP": "",
      "DocumentLink": "",
      "TotalNet": "",
      "TotalVat": "",
      "TotalGross": "",
      "RunID": ""
    }
  },
  "DeleteFileAfterProcessing": "false",
  "Seq": {
    "ServerAddress": "http://localhost:5341/",
    "AppName": "PDF2XLS"
  },
  "UploadPDF": {
    "Enabled": "true",
    "PDF2URLPath": ""
  },
  "Whisperer": {
    "BaseUrl": "https://llmwhisperer-api.eu-west.unstract.com",
    "ApiKey": ""
  },
  "OpenAI": {
    "OpenAI_APIKey": "",
    "OpenAI_Model": "gpt-4o-mini",
    "Prompt": "You are a PDF invoice parser. Your task is to analyze a given PDF and output only a valid JSON object (without markdown formatting or any extra text) that strictly adheres to the JSON schema provided below. Please send an empty response if you cannot send a json object. Use the exact keys as defined in the schema (the keys in your output should not include any additional quotation marks or modifications). If a field isn’t found in the PDF, output an empty string for that field.\nTo correctly map the PDF content to the JSON fields, use context clues and synonyms from both English and Polish. For fields that are less obvious, consider the following examples (these are only guidelines and not an exhaustive list):\n\n• invn: Look for labels like \"Invoice Number\", \"Faktura nr\", \"Nr faktury\", etc.\n• reference: Look for terms such as \"Reference\", \"Numer referencyjny\", \"Ref\", etc.\n• issue: Look for \"Issue Date\", \"Data wystawienia\", \"Wystawiona\", etc.\n• sale: Look for \"Sale Date\", \"Data sprzedaży\", \"Data sprzedaży towaru/usługi\", etc.\n• payment: Look for \"Payment Method\", \"Forma płatności\", \"Sposób płatności\", etc.\n• maturity: Look for \"Due Date\", \"Termin płatności\", \"Data zapadalności\", etc.\n• currency: Look for \"Currency\", \"Waluta\", etc.\n• total: Look for \"Total\", \"Suma\", \"Razem\", \"Całkowity\", etc.\n• paid: Look for \"Paid\", \"Zapłacono\", \"Kwota zapłacona\", etc.\n• left: Look for \"Remaining\", \"Pozostało\", \"Do zapłaty\", etc.\n• iban: Look for \"IBAN\", \"Numer IBAN\", etc.\n\nFor nested objects, use contextual clues:\n- seller and buyer:\n  - nip: Look for \"NIP\", \"VAT ID\", \"Identyfikator podatkowy\".\n  - name: Look for \"Name\", \"Firma\", \"Nazwa\", \"Company\".\n  - city: Look for \"City\", \"Miasto\".\n  - street: Look for \"Street\", \"Ulica\".\n  - zipcode: Look for \"Zip Code\", \"Kod pocztowy\".\n\n- tables → rows: For each row, map the data as follows:\n  - no: Look for sequence numbers or labels like \"No.\", \"Lp\", \"Lp.\".\n  - name: Look for \"Product\", \"Item\", \"Description\", \"Nazwa\", \"Opis\".\n  - amount: Look for \"Quantity\", \"Ilość\", \"Qty\".\n  - unit: Look for \"Unit\", \"Jednostka\", \"Unit of measure\".\n  - priceNetto: Look for \"Net Price\", \"Cena netto\", \"Netto\".\n  - vat: Look for \"VAT\", \"Stawka VAT\", \"Podatek VAT\".\n  - valNetto: Look for \"Net Value\", \"Wartość netto\".\n  - valVat: Look for \"VAT Amount\", \"Wartość VAT\".\n  - valBrutto: Look for \"Gross Value\", \"Brutto\", \"Kwota brutto\", \"Total Gross\".\n\n- tables → total: Map similar fields (i.e. valNetto, valVat, valBrutto) using corresponding clues as above.\n\nRemember:\n• Your output must be a valid JSON object that exactly follows the schema.\n• Do not include any extra keys or additional text.\n• If a piece of information is missing in the PDF, simply leave its value as an empty string.\n\nHere is the JSON schema to follow: {schema}\n\nNow, using these instructions and examples, analyze the PDF and extract the data accordingly. Do not make up data if you cannot extract any."
  }
}